decisions = {
	# Occupation of rebel territory
	authorize_occupation_decision = {
		is_high_prio = yes
		ai_check_interval = 40
		potential = {
			war = yes
			any_current_enemy = {
				liege_before_war = { character = ROOT }
				primary_title = {
					ROOT = {
						any_realm_character = {
							is_military_trigger = yes
							demesne_size = 1
							higher_tier_than = baron
							any_liege = { character = ROOT }
							NOT = { has_claim = PREVPREV }
						}
					}
				}
			}
			NOT = { has_character_flag = flag_authorizing_occupations }
		}
		allow = {
			prestige = 300
			custom_tooltip = {
				text = "FIVEYEARCOOLDOWN"
				hidden_tooltip = {
					OR = {
						NOT = { has_character_flag = flag_authorized_occupations }
						had_character_flag = { flag = flag_authorized_occupations days = 1825 }
					}
				}
			}
		}
		effect = {
			set_character_flag = flag_authorizing_occupations
			character_event = { id = military.300 tooltip = "EVTTOOLTIPMILITARY300" }
		}
		ai_will_do = {
			factor = 1
			# Must have a positive reason to do this
			modifier = {
				factor = 0
				NOT = { religion = terran_imperial }
				NOT = { religion = astrist }
				NOT = { religion = neo_feudal }
				NOT = {
					AND = {
						primary_title = { has_law = military_vassal_legitimacy_2 }
						trait = ambitious
					}
				}
			}

			# Conserve prestige if going for an ambition
			modifier = {
				factor = 0
				has_ambition = obj_become_exalted
			}

			# Strongly ideologically opposed
			modifier = {
				factor = 0
				OR = {
					religion = terran_federalist
					religion = colonial_separatist
				}
				trait = radical
			}
			modifier = {
				factor = 0
				OR = {
					religion = terran_federalist
					religion = colonial_separatist
				}
				religion_authority = 0.5
				NOT = { trait = pragmatic }
			}

			# Strongly ideologically opposed (unless they're separatists)
			modifier = {
				factor = 0
				religion = terran_republican
				NOT = {
					any_war = {
						defender = { character = ROOT }
						OR = {
							using_cb = bid_for_independence
							using_cb = cb_faction_independence
						}
					}
				}
				trait = radical
			}
			modifier = {
				factor = 0
				religion = terran_republican
				NOT = {
					any_war = {
						defender = { character = ROOT }
						OR = {
							using_cb = bid_for_independence
							using_cb = cb_faction_independence
						}
					}
				}
				religion_authority = 0.5
				NOT = { trait = pragmatic }
			}

			# Strongly ideologically opposed (unless they're traitors)
			modifier = {
				factor = 0
				religion = neo_socialist
				NOT = {
					any_current_enemy = {
						liege_before_war = { character = ROOT }
						NOT = { religion = neo_socialist }
					}
				}
				trait = radical
			}
			modifier = {
				factor = 0
				religion = neo_socialist
				NOT = {
					any_current_enemy = {
						liege_before_war = { character = ROOT }
						NOT = { religion = neo_socialist }
					}
				}
				religion_authority = 0.5
				NOT = { trait = pragmatic }
			}
		}
	}
	# Orbital Bombardment
	authorize_bombardment_decision = {
		is_high_prio = yes
		ai_check_interval = 40
		potential = {
			demesne_size = 1
			top_liege = { character = ROOT } # You are the highest authority
			any_current_enemy = { always = yes } # Is at war
			NOT = { has_character_flag = flag_authorized_orbital_bombardment }
			NOT = { has_character_flag = flag_authorizing_orbital_bombardment }
		}
		allow = {
			OR = {
				piety = 100
				trait = pragmatic
			}
		}
		effect = {
			set_character_flag = flag_authorizing_orbital_bombardment
			character_event = { id = invasion.115 }
		}
		ai_will_do = {
			factor = 1
			# Personality Effects
			modifier = {
				factor = 0
				NOT = { trait = ambitious }
				NOT = {
					AND = {
						trait = radical
						any_current_enemy = { NOT = { religion = ROOT } }
					}
				}
				NOT = { trait = cold }
			}
			modifier = {
				factor = 0
				trait = friendly
			}
			modifier = {
				factor = 0
				trait = neurotic
			}
			modifier = {
				factor = 0
				trait = radical
				any_current_enemy = { religion = ROOT }
			}
			modifier = {
				factor = 0
				trait = craven
			}
		}
	}
	order_bombardment_decision = {
		is_high_prio = yes
		ai_check_interval = 40
		potential = {
			in_command = yes
			is_landed = yes
			siege = {
				is_attacker = yes
			}
			NOT = { has_character_flag = flag_used_orbital_bombardment }
			NOT = { has_character_flag = flag_using_orbital_bombardment }
			# This is authorized
			top_liege = {
				custom_tooltip = {
					text = "AUTHORIZEDBOMBARDMENT"
					hidden_tooltip = { has_character_flag = flag_authorized_orbital_bombardment }
				}
			}
		}
		allow = {
			# Has sufficient capital ships to carry out the command
			OR = {
				siege = {
					OR = {
						knights = 0.1
						#dreadnoughts = 0.1 were apparently commented out
					}
				}
				primary_title = {
					tier = EMPEROR
				}
			}
		}
		effect = {
			set_character_flag = flag_using_orbital_bombardment
			character_event = { id = invasion.120 }
		}
		ai_will_do = {
			factor = 1
			# Must have a positive reason to order the bombardment
			modifier = {
				factor = 0
				# Lacks the soldiers for a ground assault invasion
				siege = { archers = 0.1 }
				# Would rather avoid a ground assault regardless
				NOT = { trait = craven }
				NOT = { trait = cold }
				# Personal grudge against the local ruler
				location = { owner = { reverse_opinion = { who = ROOT value = -75 } } }
				# Radical fighting aganist ideological opponents
				OR = {
					location = { religion = ROOT }
					NOT = { trait = radical }
				}
			}

			# Moral issues
			modifier = {
				factor = 0
				trait = friendly
			}
			modifier = {
				factor = 0
				location = { religion = ROOT }
				trait = radical
			}
			modifier = {
				factor = 0
				NOT = { piety = 100 }
				NOT = { trait = pragmatic }
			}

			# Avoiding bombing your own planets
			modifier = {
				factor = 0
				location = { owner = { same_realm = ROOT } }
				NOT = { trait = cold }
			}

			# Try to avoid bombing Earth if at all humanly possible
			modifier = {
				factor = 0
				location = { province_id = 202 }
				OR = {
					religion = terran_imperial
					religion = terran_republican
					religion = terran_federalist
					religion = pilgrim
					religion = orthodox
					religion = solar_cultist
					religion = solarian
				}
				NOT = { trait = pragmatic }
			}
		}
	}
	order_unauthorized_bombardment_decision = {
		is_high_prio = yes
		ai_check_interval = 40
		potential = {
			in_command = yes
			is_landed = yes
			siege = {
				is_attacker = yes
			}
			NOT = { has_character_flag = flag_used_orbital_bombardment }
			NOT = { has_character_flag = flag_using_orbital_bombardment }
			# This is not authorized
			NOT = {
				top_liege = {
					custom_tooltip = {
						text = "AUTHORIZEDBOMBARDMENT"
						hidden_tooltip = { has_character_flag = flag_authorized_orbital_bombardment }
					}
				}
			}
		}
		allow = {
			# Has sufficient capital ships to carry out the command
			siege = {
				knights = 0.1
			}
		}
		effect = {
			set_character_flag = flag_using_orbital_bombardment
			character_event = { id = invasion.120 }
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					AND = {
						trait = pragmatic
						trait = cold
					}
				}
			}
			# Must have a positive reason to order the bombardment
			modifier = {
				factor = 0
				# Lacks the soldiers for a ground assault invasion
				siege = { archers = 0.1 }
				# Would rather avoid a ground assault regardless
				NOT = { trait = craven }
				NOT = { trait = cold }
				# Personal grudge against the local ruler
				location = { owner = { reverse_opinion = { who = ROOT value = -75 } } }
				# Radical fighting aganist ideological opponents
				OR = {
					location = { religion = ROOT }
					NOT = { trait = radical }
				}
			}

			# Moral issues
			modifier = {
				factor = 0
				trait = friendly
			}
			modifier = {
				factor = 0
				location = { religion = ROOT }
				trait = radical
			}
			modifier = {
				factor = 0
				NOT = { piety = 100 }
				NOT = { trait = pragmatic }
			}

			# Avoiding bombing your own planets
			modifier = {
				factor = 0
				location = { owner = { same_realm = ROOT } }
				NOT = { trait = cold }
			}

			# Try to avoid bombing Earth if at all humanly possible
			modifier = {
				factor = 0
				location = { province_id = 202 }
				OR = {
					religion = terran_imperial
					religion = terran_republican
					religion = terran_federalist
					religion = pilgrim
					religion = orthodox
					religion = solar_cultist
					religion = solarian
				}
				NOT = { trait = pragmatic }
			}
		}
	}
	seek_political_marriage = {
		is_high_prio = yes
		ai_check_interval = 40
 potential = {
			prisoner = no
			age = 18
			NOT = { trait = incapable }
			is_ruler = yes
			trait = not_ready_to_marry
		}
		allow = {
			OR = {
				trait = ambitious
				trait = pragmatic
				trait = cold
				religion = terran_imperial
				religion = neo_feudal
				religion = bio_directionist
				religion = astrist
			}
		}
		effect = {
			remove_trait = not_ready_to_marry
			set_character_flag = flag_ready_to_marry
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { age = 25 }
			}
			modifier = {
				factor = 0
				OR = {
					trait = content
					trait = friendly
					AND = {
						trait = radical
						NOT = { religion = terran_imperial }
						NOT = { religion = neo_feudal }
						NOT = { religion = bio_directionist }
						NOT = { religion = astrist }
					}
				}
			}
			modifier = {
				factor = 0
				has_ambition = obj_marry_for_love
			}
		}
	}
	marry_your_lover_same_sex = {
		is_high_prio = yes
		ai_check_interval = 40
 potential = {
			NOT = { has_character_flag = flag_marry_your_lover }
			age = 18
			prisoner = no
			NOT = { trait = incapable }
			is_married = no
			is_betrothed = no
			num_of_lovers = 1
			NOT = { num_of_lovers = 2 }
			any_lover = {
				OR = {
					AND = {
						root = { is_female = yes }
						is_female = yes
					}
					AND = {
						root = { is_female = no }
						is_female = no
					}
				}
				age = 18
				prisoner = no
				NOT = { trait = incapable }
				is_married = no
				is_betrothed = no
			}
		}
		allow = { always = yes }
		effect = {
			set_character_flag = flag_marry_your_lover
			character_event = { id = marriage.100 tooltip = "EVTTOOLTIPMARRIAGE100" }
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_ambition = obj_marry_for_power
				OR = {
					any_lover = { is_ruler = no }
					AND = {
						higher_tier_than = baron
						any_lover = { tier = baron }
					}
					AND = {
						higher_tier_than = count
						any_lover = { tier = count }
					}
					AND = {
						higher_tier_than = duke
						any_lover = { tier = duke }
					}
					AND = {
						higher_tier_than = king
						any_lover = { tier = king }
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					trait = neurotic
					trait = craven
					NOT = { age = 23 }
				}
				NOT = { has_ambition = obj_marry_for_love }
				NOT = { has_ambition = obj_marry_for_power }
			}
			modifier = {
				factor = 0
				any_lover = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_heartbroken } }
			}
			modifier = {
				factor = 0
				OR = {
					religion = terran_imperial
					religion = bio_directionist
					religion = neo_feudal
				}
				NOT = { trait = pragmatic }
				NOT = { trait = carefree }
			}
		}
	}
	marry_your_lover_male = {
		is_high_prio = yes
		ai_check_interval = 40
 potential = {
			ai = no
			NOT = { has_character_flag = flag_marry_your_lover }
			age = 18
			prisoner = no
			NOT = { trait = incapable }
			is_married = no
			is_betrothed = no
			num_of_lovers = 1
			NOT = { num_of_lovers = 2 }
			is_female = no
			any_lover = {
				is_female = yes
				age = 18
				prisoner = no
				NOT = { trait = incapable }
				is_married = no
				is_betrothed = no
			}
		}
		allow = { always = yes }
		effect = {
			set_character_flag = flag_marry_your_lover
			character_event = { id = marriage.200 tooltip = "EVTTOOLTIPMARRIAGE200" }
		}
	}
	marry_your_lover_female = {
		is_high_prio = yes
		ai_check_interval = 40
 potential = {
			ai = no
			NOT = { has_character_flag = flag_marry_your_lover }
			age = 18
			prisoner = no
			NOT = { trait = incapable }
			is_married = no
			is_betrothed = no
			num_of_lovers = 1
			NOT = { num_of_lovers = 2 }
			is_female = yes
			any_lover = {
				is_female = no
				age = 18
				prisoner = no
				NOT = { trait = incapable }
				is_married = no
				is_betrothed = no
			}
		}
		allow = { always = yes }
		effect = {
			set_character_flag = flag_marry_your_lover
			character_event = { id = marriage.300 tooltip = "EVTTOOLTIPMARRIAGE300" }
		}
	}

	commit_suicide = {
		ai_check_interval = 40
 potential = {
			age = 16
			trait = depressed
		}
		allow = {
			trait = depressed
		}
		effect = {
			prestige = -200
			death = { death_reason = death_suicide }
		}
		ai_will_do = {
			factor = 0
		}
	}
}

settlement_decisions = {
	scorch_settlement = {
		filter = realm_owned
		ai_target_filter = realm_owned
		is_high_prio = no
		ai_check_interval = 3

		from_potential = {
			is_playable = yes
		}

		potential = {
			OR = {
				owner = { character = FROM }
				owner = { is_vassal_or_below_of = FROM }
			}
		}

		allow = {
			OR = {
				has_building = ca_fleet_support_q_1
				has_building = ca_fleet_support_q_2
				has_building = ca_fleet_support_q_3
				has_building = ca_fleet_support_q_4
				has_building = ca_fleet_support_q_5
				has_building = ca_fleet_support_q_6
				has_building = ca_fleet_support_q_7
				has_building = ca_fleet_support_q_8

				has_building = ct_agriculture_q_1
				has_building = ct_agriculture_q_2
				has_building = ct_agriculture_q_3
				has_building = ct_agriculture_q_4
				has_building = ct_agriculture_q_5

				has_building = ct_trade_center_q_1
				has_building = ct_trade_center_q_2
				has_building = ct_trade_center_q_3
				has_building = ct_trade_center_q_4
				has_building = ct_trade_center_q_5

				has_building = ct_factories_q_1
				has_building = ct_factories_q_2
				has_building = ct_factories_q_3
				has_building = ct_factories_q_4
				has_building = ct_factories_q_5
				has_building = ct_factories_q_6
				has_building = ct_factories_q_7
				has_building = ct_factories_q_8

				has_building = tp_military_mathematics_q_1
				has_building = tp_military_mathematics_q_2
				has_building = tp_military_mathematics_q_3
				has_building = tp_military_mathematics_q_4
				has_building = tp_military_mathematics_q_5
				has_building = tp_military_mathematics_q_6
			}
		}

		effect = {

			hidden_tooltip = {
				location = { save_event_target_as = nickname_target }
				FROM = { save_event_target_as = nickname_receiver }
				if = {
					limit = {
						owner = {
							has_nickname = no
							is_adult = yes
							NOT = { trait = incapable }
						}
					}
					random_list = {
						5 = {
							owner = { give_nickname = nick_the_destroyer }
						}
						95 = {}
					}
				}
			}

			custom_tooltip = {
				text = "PILLAGE_DESTROY_BUILDINGS"
				hidden_tooltip = {
					set_variable = { which = "local_destroyed_buildings" value = 0 }
					if = {
						limit = {
							has_building = ca_fleet_support_q_1
						}
						remove_building = ca_fleet_support_q_1
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_2
						}
						remove_building = ca_fleet_support_q_2
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_3
						}
						remove_building = ca_fleet_support_q_3
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_4
						}
						remove_building = ca_fleet_support_q_4
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_5
						}
						remove_building = ca_fleet_support_q_5
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_6
						}
						remove_building = ca_fleet_support_q_6
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_7
						}
						remove_building = ca_fleet_support_q_7
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ca_fleet_support_q_8
						}
						remove_building = ca_fleet_support_q_8
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}

					if = {
						limit = {
							has_building = ct_agriculture_q_1
						}
						remove_building = ct_agriculture_q_1
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_agriculture_q_2
						}
						remove_building = ct_agriculture_q_2
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_agriculture_q_3
						}
						remove_building = ct_agriculture_q_3
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_agriculture_q_4
						}
						remove_building = ct_agriculture_q_4
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_agriculture_q_5
						}
						remove_building = ct_agriculture_q_5
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}

					if = {
						limit = {
							has_building = ct_trade_center_q_1
						}
						remove_building = ct_trade_center_q_1
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_trade_center_q_2
						}
						remove_building = ct_trade_center_q_2
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_trade_center_q_3
						}
						remove_building = ct_trade_center_q_3
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_trade_center_q_4
						}
						remove_building = ct_trade_center_q_4
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_trade_center_q_5
						}
						remove_building = ct_trade_center_q_5
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}

					if = {
						limit = {
							has_building = ct_factories_q_1
						}
						remove_building = ct_factories_q_1
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_2
						}
						remove_building = ct_factories_q_2
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_3
						}
						remove_building = ct_factories_q_3
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_4
						}
						remove_building = ct_factories_q_4
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_5
						}
						remove_building = ct_factories_q_5
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_6
						}
						remove_building = ct_factories_q_6
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_7
						}
						remove_building = ct_factories_q_7
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = ct_factories_q_8
						}
						remove_building = ct_factories_q_8
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}

					if = {
						limit = {
							has_building = tp_military_mathematics_q_1
						}
						remove_building = tp_military_mathematics_q_1
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = tp_military_mathematics_q_2
						}
						remove_building = tp_military_mathematics_q_2
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = tp_military_mathematics_q_3
						}
						remove_building = tp_military_mathematics_q_3
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = tp_military_mathematics_q_4
						}
						remove_building = tp_military_mathematics_q_4
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = tp_military_mathematics_q_5
						}
						remove_building = tp_military_mathematics_q_5
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}
					if = {
						limit = {
							has_building = tp_military_mathematics_q_6
						}
						remove_building = tp_military_mathematics_q_6
						change_variable = { which = "local_destroyed_buildings" value = 1 }
					}


					if = {
						limit = {
							NOT = { holder_scope = { character = FROM } }
						}
						while = {
						    limit = {
								check_variable = {
								    which = "local_destroyed_buildings"
								    value > 0
								}
						    }
						    subtract_variable = {
								which = "local_destroyed_buildings"
								value = 1
						    }
						    holder_scope = {
								opinion = {
									who = FROM
									modifier = opinion_scorched_my_building
									years = 5
								}
							}
						}
					}
				}
			}

			hidden_tooltip = {
				location = {
					add_province_modifier = {
						modifier = burnt_the_land
						years = 5
					}
					fn_crisis_recalcsupply_in_province = yes
				}
			}


		}

		#AI will use only this on last resort:
		ai_will_do = {
			factor = 0.1

			trigger = {
				FROM = {
					any_war = {
						defender = {
							character = PREVPREV
							war_score = 50
						}
					}
					any_current_enemy = {
					    any_unit = {
					        location = {
					            province = ROOT
					        }
					    }
					}
				}
			}
		}
	}
}
