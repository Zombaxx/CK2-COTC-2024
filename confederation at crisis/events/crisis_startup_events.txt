namespace = startup

# Fixing various game start-up bugs
character_event = {
	id = startup.0
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# Ruler-designed immortality doesn't work, so re-immortalize them
		if = {
			limit = { trait = full_cybernetic_conversion }
			remove_trait = full_cybernetic_conversion
			add_trait = full_cybernetic_conversion
		}
	}
}
# Calculate initial senates
character_event = {
	id = startup.1
	hide_window = yes
	is_triggered_only = yes

	immediate = { any_independent_ruler = { character_event = { id = maintenance.900 } } }
}
#Adds the trait because History might have taken far too long.
character_event = {
	id = startup.2
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { religion_group = bio_directionist }
			add_trait = bio_directionist_trait
		}
	}
}

#character_event = {
#	id = startup.3
#	hide_window = yes
#
#	only_rulers = yes
#	is_triggered_only = yes
#	trigger = {
#			has_landed_title = k_avalon
#		}
#	immediate = {
#		set_government_type = military_monarchy
#	}
#}

character_event = {
	id = startup.4
	hide_window = yes
	only_rulers = yes
	is_triggered_only = yes
	trigger = {
		always = yes
	}

	option = {
		any_character = { character_event = { id = startup.5 } }
		any_province = {
			fn_crisis_recalcsupply_in_province = yes
			fn_crisis_recalctrade_in_province = yes
			if = { limit = { terrain = main_sequence NOT = { has_province_modifier = main_sequence } }
				add_province_modifier = { name = main_sequence duration = -1 } }
			if = { limit = { terrain = debris_disk NOT = { has_province_modifier = debris_disk } }
				add_province_modifier = { name = debris_disk duration = -1 } }
			if = { limit = { terrain = red_giant NOT = { has_province_modifier = red_giant } }
				add_province_modifier = { name = red_giant duration = -1 } }
			if = { limit = { terrain = white_dwarf NOT = { has_province_modifier = white_dwarf } }
				add_province_modifier = { name = white_dwarf duration = -1 } }
			if = { limit = { terrain = neutron_star NOT = { has_province_modifier = neutron_star } }
				add_province_modifier = { name = neutron_star duration = -1 } }
			if = { limit = { terrain = black_hole NOT = { has_province_modifier = black_hole } }
				add_province_modifier = { name = black_hole duration = -1 } }
			if = { limit = { terrain = pulsar NOT = { has_province_modifier = pulsar } }
				add_province_modifier = { name = pulsar duration = -1 } }
			if = { limit = { terrain = nebula NOT = { has_province_modifier = nebula } }
				add_province_modifier = { name = nebula duration = -1 } }
			if = { limit = { terrain = protostar NOT = { has_province_modifier = protostar } }
				add_province_modifier = { name = protostar duration = -1 } }
			if = { limit = { terrain = sparse_system NOT = { has_province_modifier = sparse_system } }
				add_province_modifier = { name = sparse_system duration = -1 } }
			if = { limit = { terrain = goldilocks_star NOT = { has_province_modifier = goldilocks_star } }
				add_province_modifier = { name = goldilocks_star duration = -1 } }
			if = { limit = { terrain = supergiant NOT = { has_province_modifier = supergiant } }
				add_province_modifier = { name = supergiant duration = -1 } }
		}
	}
}

character_event = {
	id = startup.5
	hide_window = yes
	only_rulers = yes
	is_triggered_only = yes
	trigger = {
		always = yes
	}

	option = {
		primary_title = {
			if = {
				limit = { has_law = succ_appointment }
				add_law = {
					law = succ_true_appointment
					cooldown = no
					opinion_effect = no
				}
			}
		}

		capital_holding = {

			### fix government wishes
			#if = {
			#	limit = {
			#		holding_type = castle
			#	}
			#	ROOT = {
			#		primary_title = {
			#			add_law = {
			#				law = local_main_government_type_0
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#			add_law = {
			#				law = local_secondary_government_type_0
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#		}
			#	}
			#	if = { limit = { holder_scope = { tier = KING }}
			#		ROOT = {
			#			primary_title = {
			#				add_law = {
			#					law = local_secondary_government_type_1
			#					cooldown = no
			#					opinion_effect = no
			#				}
			#			}
			#		}
			#	}
			#}
			#if = {
			#	limit = {
			#		OR = {
			#			holding_type = city
			#			holding_type = family_palace
			#		}
			#	}
			#	ROOT = {
			#		primary_title = {
			#			add_law = {
			#				law = local_main_government_type_1
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#			add_law = {
			#				law = local_secondary_government_type_1
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#		}
			#	}
			#	if = { limit = { holder_scope = { tier = KING }}
			#		ROOT = {
			#			primary_title = {
			#				add_law = {
			#					law = local_secondary_government_type_2
			#					cooldown = no
			#					opinion_effect = no
			#				}
			#			}
			#		}
			#	}
			#}
			#if = {
			#	limit = {
			#		holding_type = temple
			#	}
			#	ROOT = {
			#		primary_title = {
			#			add_law = {
			#				law = local_main_government_type_2
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#			add_law = {
			#				law = local_secondary_government_type_2
			#				cooldown = no
			#				opinion_effect = no
			#			}
			#		}
			#	}
			#	if = { limit = { holder_scope = { tier = KING }}
			#		ROOT = {
			#			primary_title = {
			#				add_law = {
			#					law = local_secondary_government_type_0
			#					cooldown = no
			#					opinion_effect = no
			#				}
			#			}
			#		}
			#	}
			#}
		}

		set_government_type = landless
		primary_title = { set_tribal_vassal_levy_control = no }

		#proper enable correct law when no law at all is enabled
		if = {
			limit = {
				NOT = {
					is_law_potential = police_budget_1
					is_law_potential = police_budget_2
					is_law_potential = police_budget_3
				}
			}
			add_law = police_budget_0
		}
		if = {
			limit = {
				NOT = {
					is_law_potential = health_care_budget_1
					is_law_potential = health_care_budget_2
					is_law_potential = health_care_budget_3
				}
			}
			add_law = health_care_budget_0
		}
		if = {
			limit = {
				NOT = {
					is_law_potential = education_budget_1
					is_law_potential = education_budget_2
					is_law_potential = education_budget_3
				}
			}
			add_law = education_budget_0
		}
		if = {
			limit = {
				NOT = {
					is_law_potential = military_budget_1
					is_law_potential = military_budget_2
					is_law_potential = military_budget_3
				}
			}
			add_law = military_budget_0
		}
		if = {
			limit = {
				NOT = {
					is_law_potential = civil_budget_1
					is_law_potential = civil_budget_2
					is_law_potential = civil_budget_3
				}
			}
			add_law = civil_budget_0
		}
		if = {
			limit = {
				NOT = {
					is_law_potential = rectorial_budget_1
					is_law_potential = rectorial_budget_2
					is_law_potential = rectorial_budget_3
				}
			}
			add_law = rectorial_budget_0
		}

		#if = { limit = { has_law = law_voting_power_1 }
		#	if = { limit = { government = neo_feudal_government }
		#		add_law = legislative_type_aristocratic
		#	}
		#	else =
		#	{
		#		add_law = legislative_type_democratic
		#	}
		#}

		#if = { limit = { government = neo_feudal_government } set_tribal_vassal_levy_control = no }
		#else = {  }

		#if = {
		#	limit = {
		#		NOT = {
		#			is_law_potential = research_budget_1
		#			is_law_potential = research_budget_2
		#			is_law_potential = research_budget_3
		#		}
		#	}
		#	add_law = research_budget_0
		#}

		#add_law = law_voting_power_1
		#add_law = war_voting_power_1
		#add_law = grant_title_voting_power_0
		#add_law = revoke_title_voting_power_1
		#add_law = imprison_voting_power_0
		#add_law = banish_voting_power_1
		#add_law = execution_voting_power_1
		#add_law = succession_voting_power_1
	}
}

character_event = { #some rulers started with no crown laws and unable to select any, having to create a new title for the game to assign them the defaults properly
	id = startup.6
	hide_window = yes
	only_rulers = yes
	is_triggered_only = yes
	trigger = {
		primary_title = {
			is_crown_law_title = yes
			OR = {
				NOR = {
					has_law = centralization_0
					has_law = centralization_1
					has_law = centralization_2
					has_law = centralization_3
					has_law = centralization_4
				}
				NOR = {
					has_law = public_order_0
					has_law = public_order_1
					has_law = public_order_2
				}
				NOR = {
					has_law = military_vassal_legitimacy_0
					has_law = military_vassal_legitimacy_1
					has_law = military_vassal_legitimacy_2
				}
				NOR = {
					has_law = republic_vassal_legitimacy_0
					has_law = republic_vassal_legitimacy_1
					has_law = republic_vassal_legitimacy_2
				}
				NOR = {
					has_law = theocracy_vassal_legitimacy_0
					has_law = theocracy_vassal_legitimacy_1
					has_law = theocracy_vassal_legitimacy_2
				}
				NOR = {
					has_law = out_of_realm_inheritance_law_0
					has_law = out_of_realm_inheritance_law_1
				}
			}
		}
	}

	immediate = {
		primary_title = {
			if = {
				limit = {
					NOR = {
						has_law = centralization_0
						has_law = centralization_1
						has_law = centralization_2
						has_law = centralization_3
						has_law = centralization_4
					}
				}
				add_law = {
					law = centralization_0
					cooldown = no
					opinion_effect = no
				}
			}
			if = {
				limit = {
					NOR = {
						has_law = public_order_0
						has_law = public_order_1
						has_law = public_order_2
					}
				}
				add_law = {
					law = public_order_0
					cooldown = no
					opinion_effect = no
				}
			}
			if = {
				limit = {
					NOR = {
						has_law = military_vassal_legitimacy_0
						has_law = military_vassal_legitimacy_1
						has_law = military_vassal_legitimacy_2
					}
				}
				add_law = {
					law = military_vassal_legitimacy_2
					cooldown = no
					opinion_effect = no
				}
			}
			if = {
				limit = {
					NOR = {
						has_law = republic_vassal_legitimacy_0
						has_law = republic_vassal_legitimacy_1
						has_law = republic_vassal_legitimacy_2
					}
				}
				add_law = {
					law = republic_vassal_legitimacy_1
					cooldown = no
					opinion_effect = no
				}
			}
			if = {
				limit = {
					NOR = {
						has_law = theocracy_vassal_legitimacy_0
						has_law = theocracy_vassal_legitimacy_1
						has_law = theocracy_vassal_legitimacy_2
					}
				}
				add_law = {
					law = theocracy_vassal_legitimacy_2
					cooldown = no
					opinion_effect = no
				}
			}
			if = {
				limit = {
					NOR = {
						has_law = out_of_realm_inheritance_law_0
						has_law = out_of_realm_inheritance_law_1
					}
				}
				add_law = {
					law = out_of_realm_inheritance_law_0
					cooldown = no
					opinion_effect = no
				}
			}
		}
	}
}

character_event = { #fix piety/prestige costs from previous event
	id = startup.7
	hide_window = yes
	only_rulers = yes
	is_triggered_only = yes
	trigger = {
		prestige < 0
	}

	immediate = {
		prestige = 250
	}
}

character_event = { #fix piety/prestige costs from previous event
	id = startup.8
	hide_window = yes
	only_rulers = yes
	is_triggered_only = yes
	trigger = {
		piety < 0
	}

	immediate = {
		piety = 250
	}
}
